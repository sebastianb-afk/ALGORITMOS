#include<iostream>

using namespace std;

class Vector{
    
    int* v;
    int size;
    int capacity;
    
public:

    Vector(){
        v = new int[10];
        size = 0;
        capacity = 10;
    }
    
    Vector(int cap){
        v = new int[cap];
        size = 0;
        capacity = cap;
    }
    
    ~Vector(){
        delete[] v;
    }
    
    int get(int i){
        if(i < size){
            return v[i];
        }else{
            cout<<"Error en la posición - get"<<endl;
        }
        return -999;
    }
    
    void set(int i, int x){
        if(i < size){
            v[i] = x;
        }else{
            cout<<"Error en la posición - set"<<endl;
        }
    }
    
    void push_back(int x){
        if(size == capacity){
            //Aumentar el vector
            increase_capacity();
        }
        v[size] = x;
        size++;
    }
    
    void increase_capacity(){
        int* old_v = v;
        v = new int(2*capacity);
        for(int i=0; i<capacity; i++){
            v[i] = old_v[i];
        }
        delete[] old_v;
        capacity = capacity * 2;
    }
    
    void print(){
        for(int i=0; i<size; i++){
            cout<<v[i]<<"\t";
        }
        cout<<endl;
    }
    
    void getStats(){
        cout<<"Size: "<<size<<" Capacity: "<<capacity<<endl;
    }
    
    /*Se corren a la derecha los elementos a partir del elemento i, para crear espacio en esa ubicación. 
       Se asume que hay espacio en el vector.*/
    void corrimiento_der(int i){
        for(int j = size; j>i; j--){
            v[j] = v[j-1];
        }
    }
    
    /*Se corren a la izquierda los elementos sobre el elemento i, para eliminar el espacio en esa ubicación. 
       Se asume que hay espacio en el vector.*/
    void corrimiento_izq(int i){
        for(int j = i; j<size-1; j++){
            v[j] = v[j+1];
        }
    }
    
    void insert(int i, int x){
        if(i < size){
            cout<<"Entre 1"<<endl;
            if(size == capacity){
                //Aumentar el vector
                cout<<"Entre 2"<<endl;
                increase_capacity();
            }
            corrimiento_der(i);
            size++;
            v[i] = x;
        }else{
            cout<<"Error en la posición - insert"<<endl;
        }
    }
    
    void remove(int i){
        if(i < size){
            corrimiento_izq(i);
            size--;
        }else{
            cout<<"Error en la posición - remove"<<endl;
        }
    }
    
     
    
    
    
};

int main()
{
    
    Vector v = Vector();
    
    for(int i=0; i<15; i++){
        v.push_back(i);
    }
    
    v.print();
    
    v.getStats();
    
    cout<<v.get(5)<<endl;
    cout<<v.get(17)<<endl;
    
    v.set(5,24);
    v.set(17,24);
    v.print();
    
    v.insert(8,40);
    v.insert(23,40);
    v.print();
    
    v.getStats();
    
    v.remove(8);
    v.remove(23);
    v.print();
    v.getStats();
    
    
    
    return 0;
}

#include<iostream>
#include <math.h> 
#include <stdexcept>
#include <string>
#include <random>
#include <vector>

using namespace std;

class Ciclista{
    
    string ciclista;
    string run;
//    srand(time(0));
    int tiempo = rand()%300;

public:
    
    Ciclista(string name,string carrera){
        ciclista = name;
        run = carrera;
    }
        //Getters
    int getTime() {
        return tiempo;
    }
    string getCarrera() {
        return run;
    }
    string getCiclista() {
        return ciclista;
    }
    
};

class Nodo{
	
	Ciclista* dato;
	Nodo* dir;
	
public:

	Nodo(){
		dato = NULL;
		dir = NULL;
	}	
	
	~Nodo(){
      delete dato;
  	}
	
	Nodo(Ciclista* c){
		dato = c;
		dir = NULL;
	}
	
	Ciclista* getDato(){
		return dato;
	}
	
	void setDato(Ciclista* c){
		dato = c;
	}
	
	Nodo* getNext(){
		return dir;
	}
	
	void setNext(Nodo* n){
		dir = n;
	}
	
};

class Lista{
	
	Nodo* ptr;
	int size;
	
public:
	
	Lista(){
		ptr = NULL;
		size = 0;
	}
	
	void push_back(Ciclista* c){
        if(size == 0){
            ptr = new Nodo(c);
            size++;
        }else{
            Nodo* t = ptr;
            while(t->getNext() != NULL){
                t = t->getNext();    
            }
            t->setNext(new Nodo(c));
            size++;
        }
    }
    
    int getSize(){
        return size;
    }
    
    Nodo* getPtr() {
        return ptr;
    }
    
    Nodo* getNodo(int pos) {
        if(size == 0) {
            throw invalid_argument("La lista no tienen nodos");
        } else if (pos >= size || pos < 0) {
            throw invalid_argument("El nodo no esta en la lista");
        } else {
            Nodo* t = ptr;
            for(int i = 0; i < pos; i++) {
                t = t->getNext();
            }
            return t;
        }
    }
	
	void print(){
		if(size == 0){
            cout<<"La lista está vacía" <<endl;
        }else{
            Nodo* t = ptr;
            do{
                cout<<"CICLISTA "<<t->getDato()->getCiclista()<<"\t"<<"TIEMPO \t"<<t->getDato()->getTime()<<"\t"<<"CARRERA "<<t->getDato()->getCarrera()<<endl;
                t = t->getNext();
                
            }while(t != NULL);
            cout<<endl;
        }
	} 
	
};

int main(){
    //MATRIZ DE RECORDS------------
    int records[5][5];
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            if(i==j){
                records[i][j]=-1;
            }else{
                records[i][j]=rand()%100;
            }
        }
    }
    for(int i=0; i<5; i++){
       for(int j=0; j<5; j++){
           cout<<records[i][j]<<"\t";
       }
       cout<<"\n";
   }
   //------------------------------
   
   cout<<"\n"<<endl;
   
   //IMPLEMENTACÍON DE LISTA-------
   vector <string> names={"Nairo","Rigo","Juan"};
   vector <string> stations={"Marly","Flores","Calle 57"};
   Lista l = Lista();
   for(int i=0;i<names.size();i++){
		for(int j=0;j<stations.size();j++){
			l.push_back(new Ciclista(names[i],stations[j]));
		}
   }
   l.print();
   //------------------------------
   
   cout<<endl;
   
   //------------------------------
   
   /*
   Ciclista b = Ciclista("Nairo","chapi");
   cout<<b.getTime()<<"\t"<<b.getCarrera()<<endl;
   
    Ciclista c = Ciclista("Rigo","marly");
   cout<<c.getTime()<<"\t"<<c.getCarrera()<<endl;
	*/

    return 0;
}
